1.1.4
• 数値は基本データで、算術演算は基本手続きである。
• 組み合わせをネストすることで、演算を組み合わせることができる。
• 定義は名前と値を関連づけ、抽象化のためにある程度役に立つ。
今ならこの記述の意味が理解できると思います。

さて、SICPは算譜の内部構造を解説した本なので、小難しい話が出てきて困っちゃいます。

# interpreterが実際にこのように動いているわけではないですが、便宜的にそう書いています。
とりあえず難しい話はいいので、「ふぅーんそんな感じね」と思いながら進めてください。

本書では、fという複合手続きを考えています。
(define (f a) (sum-of-squares (+ a 1) (* a 2)))
として、fを用いた複合式
(f 5)
を考えます。

interpreterは、先ず(f 5)は以下のように書き換えます。
(sum-of-squares (+ 5 1) (* 5 2))

2つの被演算子には、それぞれ演算子(組み込み手続き)と被演算子を有するので、これを評価します。
従って
(sum-of-squares 6 10)
を得ます。

次にinterpreterは、sum-of-squaresを次のように書き換えます。
(+ (square 6) (square 10))
次に、squareを次のように書き換えます。
(+ (* 6 6) (* 10 10))

残すは組み込み手続きを有する複合式であるので、次のように評価が進みます。
(+ 36 100)
136

手続きをどんどん置換していき、最終的に組み込み手続きのみで構成される複合式にまで帰着させています。
これを「置換model」と言います。

ただ、これは(+ 4 3)みたいな簡単な複合式が出てきたら逐1計算していますよね。
こうではなく、基本演算子のみの複合式になるまで、評価を1切しない方式もあります。

これを「正規順序評価」と言います。
