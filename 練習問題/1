s練習問題1.1
pretty print を練習しましょう。

#lang racket
(+ 5 3 4)
(- 9 1)
(/ 6 2)

(+
 (* 2 4)
 (- 4 6)
 )

(define a 3)
(define b (+ a 1))
(+ a b
   (* a b))
(= a b)

(if
 (and (> b a) (< b (* a b)))
 b
 a
 )

(cond
((= a 4) 6)
((= b 4) (+ 6 7 a))
(else 25)
  )

(+ 2 (if (> b a) b a))

(*
 (cond ((> a b) a)
       ((< a b) b)
       (else -1)
       )
 (+ a 1)
)

練習問題1.2
#lang racket
(/
 (+ 5 4 (- 2 (- 3 (+ 6 (/ 4 5)))))
 (* 3 (- 6 2) (- 2 7))
 )

あまりprettyじゃない？

練習問題1.4
(define (a-plus-abs-b a b)
(if (> b 0) + -) a b)
を満たす複合手続きa-plus-abs-bについて論ずる。
例えば、以下を評価することを考える。また、適応順序評価に則る。
(a-plus-abs-b 9 -5)
は次のように書き換えられる。
((if (> -5 0) + -) 9 -5)
述語が偽より、次のように評価が下る。
(- 9 -5)
14

練習問題1.5
Ben Bitdiddleのtestです。

(define (p) (p))
(define (test x y)
if (= x 0) x y)
(test 0 (p))

--正規順序評価--
(test 0 (p))
被演算子の評価は遅延される。従って、
(if (= 0 0) 0 (p))
0

--適応順序評価--
(test 0 (p))
被演算子の評価を先ず行う。
(define (p) (p))　より、
(test 0 (p))
と変換される。一見何も変わっていないように見えるが、(p) が (p)へと変換された。
ここで、(p) は再び変換され、この変換は永遠に続く。
従って、評価結果は出力されない。


